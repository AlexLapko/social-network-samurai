{"version":3,"sources":["redux/dialogs-reducer.js","assets/img/preloader.svg","components/Navbar/Navbar.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Friends/Friends.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/common/FormsControls/FormsControls.js","components/Login/Login.jsx","App.js","hoc/withSuspense.js","index.js","utils/validators/validators.js","components/Users/Users.module.css","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","hoc/form.js","assets/img/user.png","hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["initialState","dialogs","id","name","messages","message","sendMessageActionCreator","newMessageText","type","dialogsReducer","state","action","newMessage","module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","email","password","rememberMe","posts","likesCounts","profile","setStatus","profileReducer","newPost","newPostText","filter","p","postId","photos","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUserCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingInProgress","getUsersThunk","dispatch","a","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","followed","login","isAuth","setAuthUserData","getAuthUserDataThunk","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","classes","item","to","activeClassName","activeLink","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginatorWrap","onClick","cn","selectedPage","pageNumber","e","User","user","unfollowThunk","followThunk","userWrap","key","userPhoto","src","small","disabled","some","userInfo","userName","userLocation","Users","props","Preloader","style","textAlign","preloader","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","onPageChangedThunk","this","React","Component","compose","connect","bind","News","Music","Settings","Friends","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onChange","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","isOwner","descriptionBlock","photo","large","target","files","length","Post","Post__item","Post__photo","maxLength30","maxLengthCreator","Textarea","Element","AddPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","validate","required","component","placeholder","MyPosts","postsElements","reverse","postsBlock","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","getUserProfileThunk","getStatusThunk","refreshProfile","prevProps","prevState","updateStatusThunk","file","withRouter","withAuthRedirect","Header","logout","HeaderContainer","createField","text","Input","LoginReduxForm","error","formSummaryError","stopSubmit","_error","DialogsContainer","lazy","App","initializedApp","path","render","Suspense","fallback","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","maxLength","input","meta","hasError","touched","formControl","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.502c6019.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n\tdialogs: [\r\n\t\t\t\t{ id: \"1\", name: \"Aliaksei\" },\r\n\t\t\t\t{ id: \"2\", name: \"Olga\" },\r\n\t\t\t\t{ id: \"3\", name: \"Mark\" },\r\n\t\t\t\t{ id: \"4\", name: \"Mila\" },\r\n\t\t\t\t{ id: \"5\", name: \"Sasha\" },\r\n\t\t\t\t{ id: \"6\", name: \"Dima\" }\r\n\t\t\t],\r\n\t\t\tmessages: [\r\n\t\t\t\t{ id: \"1\", message: \"Hi\" },\r\n\t\t\t\t{ id: \"2\", message: \"How are you?\" },\r\n\t\t\t\t{ id: \"3\", message: \"Yo\" },\r\n\t\t\t\t{ id: \"4\", message: \"YoYo\" },\r\n\t\t\t\t{ id: \"5\", message: \"YoYoYo\" }\r\n\t\t\t],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase SEND_MESSAGE:\r\n\t\t\tlet newMessage = {\r\n\t\t\t\tid: \"6\",\r\n\t\t\t\tmessage: action.newMessageText\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages: [...state.messages, newMessage],\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.ee608091.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__3GB-w\",\"item\":\"Navbar_item__2dk4O\",\"activeLink\":\"Navbar_activeLink__2LucW\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: { 'API-KEY': 'b287f2df-2cdb-40ea-a05a-c355b2481fa0' }\r\n})\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage, pageSize) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t})\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t},\r\n\tgetProfile(userId) {\r\n\t\treturn profileAPI.getProfile(userId)\r\n\t}\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId) {\r\n\t\treturn instance.get(`profile/${userId}`)\r\n\t},\r\n\tgetStatus(userId) {\r\n\t\treturn instance.get(`profile/status/${userId}`)\r\n\t},\r\n\tupdateStatus(status) {\r\n\t\treturn instance.put(`profile/status`, {status: status} )\r\n\t},\r\n\tsavePhoto(photoFile) {\r\n\t\tconst formData = new FormData()\r\n\t\tformData.append('image', photoFile)\r\n\t\treturn instance.put(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get(`auth/me`)\r\n\t},\r\n\tlogin(email, password, rememberMe = false) {\r\n\t\treturn instance.post(`auth/login`, {email, password, rememberMe})\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`auth/login`)\r\n\t}\r\n}","import {usersAPI, profileAPI} from './../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t\t\t{ id: 1, message: \"Hi, how are you\", likesCounts: 15 },\r\n\t\t\t\t{ id: 2, message: \"It's my first post\", likesCounts: 20 },\r\n\t\t\t\t{ id: 3, message: \"Post\", likesCounts: 23 }\r\n\t\t\t],\r\n\t\t\tprofile: null,\r\n\t\t\tstatus: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 4,\r\n\t\t\t\tmessage: action.newPostText,\r\n\t\t\t\tlikesCounts: 0\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t\tnewPostText: ''\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase SET_USER_PROFILE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase SET_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase DELETE_POST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tposts: state.posts.filter(p => p.id !== action.postId)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SAVE_PHOTO_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: {...state.profile, photos: action.photos}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE,\tprofile})\r\nexport const setStatus = (status) => ({type: SET_STATUS,\tstatus})\r\nexport const deletePost = (postId) => ({type: DELETE_POST,\tpostId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS,\tphotos})\r\n\r\nexport const getUserProfileThunk = userId => {\r\n\treturn async dispatch => {\r\n\t\tlet response = await usersAPI.getProfile(userId)\r\n\t\tdispatch(setUserProfile(response.data));\r\n\t};\r\n};\r\n\r\nexport const getStatusThunk = userId => {\r\n\treturn async dispatch => {\r\n\t\tlet response = await profileAPI.getStatus(userId)\r\n\t\tdispatch(setStatus(response.data));\r\n\t};\r\n};\r\n\r\nexport const updateStatusThunk = status => {\r\n\treturn async dispatch => {\r\n\t\tlet response = await profileAPI.updateStatus(status)\r\n\t\tif (response.data.resultCode === 0) {\r\n\t\t\tdispatch(setStatus(status));\r\n\t\t}\r\n\t};\t\r\n};\r\n\r\nexport const savePhoto = file => {\r\n\treturn async dispatch => {\r\n\t\tlet response = await profileAPI.savePhoto(file)\r\n\t\tif (response.data.resultCode === 0) {\r\n\t\t\tdispatch(savePhotoSuccess(response.data.data.photos));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default profileReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\treturn items.map(u => {\r\n\t\tif (u[objPropName] === itemId) {\r\n\t\t\treturn {\r\n\t\t\t\t...u,\r\n\t\t\t\t...newObjProps\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn u;\r\n\t})\t \r\n}\r\n","import { usersAPI } from \"./../api/api\";\r\nimport {updateObjectInArray} from './../utils/object-helpers'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLOWING_IS_PROGRESS = 'TOGGLE_IS_FOLOWING_IS_PROGRESS'\r\n\r\nlet initialState = {\r\n\tusers: [],\r\n\tpageSize: 10,\r\n\ttotalUserCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: true,\r\n\tfollowingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n\t\t\t}\r\n\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n\t\t\t}\r\n\t\t\r\n\t\tcase SET_USERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: action.users\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase SET_CURRENT_PAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: action.currentPage\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase SET_TOTAL_USERS_COUNT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalUserCount: action.count\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase TOGGLE_IS_FETCHING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: action.isFetching\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase TOGGLE_IS_FOLOWING_IS_PROGRESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching \r\n\t\t\t\t\t? [...state.followingInProgress, action.userId] \r\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userId)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLOWING_IS_PROGRESS, isFetching, userId})\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(toggleIsFetching(true));\r\n\t\tlet data = await usersAPI.getUsers(currentPage, pageSize)\r\n\t\tdispatch(toggleIsFetching(false));\r\n\t\tdispatch(setUsers(data.items));\r\n\t\tdispatch(setTotalUsersCount(data.totalCount));\r\n\t}\r\n}\r\nexport const onPageChangedThunk = (pageNumber, pageSize) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(setCurrentPage(pageNumber));\r\n\t\tdispatch(getUsersThunk(pageNumber, pageSize));\r\n\t}\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\tdispatch(toggleFollowingInProgress(true, userId));\r\n\tlet response = await apiMethod(userId)\r\n\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(actionCreator(userId));\r\n\t}\r\n\tdispatch(toggleFollowingInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\treturn async (dispatch) => {\r\n\t\tfollowUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n\t}\r\n}\r\nexport const unfollow = userId => {\r\n  return async dispatch => {\r\n\t\tfollowUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default usersReducer;","import { authAPI } from './../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.data\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ( { type: SET_USER_DATA, data: {userId, email, login, isAuth} } )\r\n\r\nexport const getAuthUserDataThunk = () => {\r\n\treturn async (dispatch) => {\r\n\t\tlet response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n      let { id, email, login } = response.data.data;\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\t}\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n\treturn async (dispatch) => {\r\n\t\tlet response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(getAuthUserDataThunk());\r\n    } else {\r\n\t\t\tlet message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n\t\t\tdispatch(stopSubmit('login', {_error: message}))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const logout = () => {\r\n\treturn async (dispatch) => {\r\n\t\tlet response = await authAPI.logout()\r\n\t\tif (response.data.resultCode === 0) {\r\n\t\t\tdispatch(setAuthUserData(null, null, null, true));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserDataThunk} from './auth-reducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n\tinitialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const initializedSuccess = () => ( { type: INITIALIZED_SUCCESS } )\r\n\r\nexport const initializedApp = () => {\r\n\treturn (dispatch) => {\r\n\t\tlet promise = dispatch(getAuthUserDataThunk())\r\n\t\tPromise.all([promise])\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch(initializedSuccess())\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport appReducer from './app-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers ({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n\tapp: appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react'\r\nimport classes from './../Navbar/Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav className={classes.Navbar}>\r\n\t\t\t<ul>\r\n\t\t\t\t<li className={classes.item}>\r\n\t\t\t\t\t<NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={classes.item}>\r\n\t\t\t\t\t<NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Message</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={classes.item}>\r\n\t\t\t\t\t<NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={classes.item}>\r\n\t\t\t\t\t<NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={classes.item}>\r\n\t\t\t\t\t<NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={classes.item}>\r\n\t\t\t\t\t<NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={classes.item}>\r\n\t\t\t\t\t<NavLink to=\"/friends\" activeClassName={classes.activeLink}>Friends</NavLink>\t\t\t\t\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react'\r\nimport classes from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 12 }) => {\r\n\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={classes.paginatorWrap}>\r\n      <div className={classes.Paginator}>\r\n        {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n        <div>\r\n          {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n              return (\r\n                <span className={cn({[classes.selectedPage] : currentPage === p}, classes.pageNumber)} onClick={e => {onPageChanged(p);}}>\r\n                  {p}\r\n                </span>\r\n              );\r\n            })}\r\n        </div>\r\n\r\n        {portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n      \r\nexport default Paginator;","import React from 'react'\r\nimport classes from './Users.module.css'\r\nimport userPhoto from './../../assets/img/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { usersAPI } from \"./../../api/api\";\r\nimport Paginator from './../common/Paginator/Paginator';\r\n\r\nlet User = ({ user, followingInProgress, unfollowThunk, followThunk }) => {\r\n  return (\r\n    <div className={classes.userWrap} key={user.id}>\r\n      <div>\r\n        <div className={classes.userPhoto}>\r\n          <NavLink to={\"/profile/\" + user.id}>\r\n            <img\r\n              src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some(id => id === user.id)}\r\n              onClick={() => {\r\n                unfollowThunk(user.id);\r\n              }}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some(id => id === user.id)}\r\n              onClick={() => {\r\n                followThunk(user.id);\r\n              }}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={classes.userInfo}>\r\n        <div className={classes.userName}>\r\n          <span>{user.name}</span>\r\n          <span>{user.status}</span>\r\n        </div>\r\n        <div className={classes.userLocation}>\r\n          <span>{\"user.location.country\"}</span>\r\n          <span>{\"user.location.city\"}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;","import React from 'react'\r\nimport Paginator from './../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ totalUserCount, pageSize, currentPage, onPageChanged, users, ...props }) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        totalItemsCount={totalUserCount}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n      />\r\n\r\n      <div>\r\n        {users.map(u => ( <User \r\n                            key={u.id} \r\n                            user ={u} \r\n                            followingInProgress={props.followingInProgress} \r\n                            unfollowThunk={props.unfollowThunk} \r\n                            followThunk={props.followThunk} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;","import React from 'react'\r\nimport preloader from './../../../assets/img/preloader.svg'\r\n\r\nlet Preloader = (props) => {\r\n\treturn <div style={{ textAlign: \"center\" }}>\r\n      <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const getUsers = (state) => {\r\n\treturn state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n\treturn state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n\treturn state.usersPage.totalUserCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n\treturn state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n\treturn state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n\treturn state.usersPage.followingInProgress\r\n}","import React from 'react'\r\nimport Users from './Users'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  getUsersThunk,\r\n  onPageChangedThunk\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {withAuthRedirect} from './../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUserCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n    let { currentPage, pageSize } = this.props;\r\n\t\tthis.props.getUsersThunk(currentPage, pageSize);\r\n\t}\r\n\r\n\tonPageChanged = (pageNumber) => {\r\n    let { pageSize } = this.props;\r\n\t\tthis.props.onPageChangedThunk(pageNumber, pageSize);\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUserCount={this.props.totalUserCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          followThunk={this.props.follow}\r\n          unfollowThunk={this.props.unfollow}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n\t}\t\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUserCount: getTotalUserCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {follow, unfollow, getUsersThunk, onPageChangedThunk})\r\n)(UsersContainer);\r\n\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n    follow: userId => {\r\n      dispatch(followAC(userId));\r\n    },\r\n    unfollow: userId => {\r\n      dispatch(unfollowAC(userId));\r\n    },\r\n    setUsers: users => {\r\n      dispatch(setUsersAC(users));\r\n    },\r\n    setCurrentPage: pageNumber => {\r\n      dispatch(setCurrentPageAC(pageNumber));\r\n    },\r\n    setTotalCount: totalCount => {\r\n      dispatch(setTotalUsersCountAC(totalCount));\r\n    },\r\n    toggleIsFetching: isFetching => {\r\n      dispatch(toggleIsFetchingAC(isFetching));\r\n    }\r\n  };\r\n}*/","import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\nconst News = props => {\r\n  return <div>News</div>;\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\nconst Music = props => {\r\n  return <div>Music</div>;\r\n};\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport classes from \"./Settings.module.css\";\r\n\r\nconst Settings = props => {\r\n  return <div>Settings</div>;\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport classes from \"./Friends.module.css\";\r\n\r\nconst Friends = props => {\r\n  return <div>Friends</div>;\r\n};\r\n\r\nexport default Friends;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status] )\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n    return (\r\n      <div>\r\n        {!editMode ? (\r\n          <div>\r\n            <span onDoubleClick={activateEditMode}>\r\n              {props.status || 'No status'}\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <input\r\n              onChange={onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={deactivateEditMode}\r\n              value={status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from './../../../assets/img/user.png'\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.ProfileInfo}>\r\n      <div className={classes.descriptionBlock}>\r\n        <div className={classes.photo}>\r\n          <img src={profile.photos.large || userPhoto} />\r\n        </div>\r\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n        <div className={classes.status}>\r\n          <ProfileStatusWithHooks\r\n            status={status}\r\n            updateStatus={updateStatus}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\treturn (\t\r\n\t\t<div className={classes.Post__item}>\r\n\t\t\t<img className={classes.Post__photo} src='https://www.meme-arsenal.com/memes/50569ac974c29121ff9075e45a334942.jpg' />\r\n\t\t\t{ props.message }\r\n\t\t\t<div>\r\n\t\t\t\t<span>like - {props.likesCounts }</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {required, maxLengthCreator} from './../../../utils/validators/validators' \r\nimport { Element } from \"./../../../hoc/form\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} key={p.id} likesCounts={p.likesCounts} />)\r\n\r\n  let addNewPostText = (value) => {\r\n    props.addPost(value.newPostText);\r\n  }\r\n \r\n\treturn (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={addNewPostText}/>\r\n      <div className={classes.posts}>\r\n        { postsElements }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          validate={[required, maxLength30]}\r\n          component={Textarea}\r\n          name=\"newPostText\"\r\n          placeholder=\"Enter your text\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'addPostText'})(AddPostForm);\r\n\r\nexport default MyPosts;","import React from 'react'\r\nimport MyPosts from './MyPosts'\r\nimport { addPostActionCreator } from './../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  };\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n    <div>\r\n      <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfileThunk, getStatusThunk, updateStatusThunk, savePhoto } from \"./../../redux/profile-reducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfileThunk(userId);\r\n\t\tthis.props.getStatusThunk(userId);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState){\r\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile \r\n\t\t\t\t{...this.props} \r\n\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\tprofile={this.props.profile} \r\n\t\t\t\tstatus={this.props.status} \r\n\t\t\t\tupdateStatus={this.props.updateStatusThunk}\r\n\t\t\t\tsavePhoto={this.props.savePhoto}/>\r\n\t\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfileThunk, getStatusThunk, updateStatusThunk, savePhoto }),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer);\r\n","import React from 'react'\r\nimport classes from './../Header/Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.Header}>\r\n      <img src=\"https://www.designfreelogoonline.com/wp-content/uploads/2016/03/00106-3D-company-logo-design-free-logo-online-Template-03.png\" />\r\n\r\n      <div className={classes.login}>\r\n        {props.isAuth \r\n          ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={\"/login\"}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from \"./../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n     return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react'\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const createField = (placeholder, validate, component, name, props = {}, text = '') => {\r\n\treturn (\r\n\t\t<div>\r\n      <Field\r\n        placeholder={placeholder}\r\n        validate={validate}\r\n        component={component}\r\n\t\t\t\tname={name}\r\n\t\t\t\t{...props}\r\n      /> {text}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {Element} from './../../hoc/form'\r\nimport {required} from './../../utils/validators/validators'\r\nimport { connect } from 'react-redux';\r\nimport { login } from \"./../../redux/auth-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createField } from \"./../common/FormsControls/FormsControls\";\r\nimport classes from './../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst Input = Element(\"input\");\r\n\r\nconst LoginForm = (props) => {  \r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      {createField(\"Email\", [required], Input, \"email\")}\r\n      {createField(\"Password\", [required], Input, \"password\", {type: \"password\"})}\r\n      {createField(null, [], Input, \"rememberMe\", {type: \"checkbox\"}, \"Remember me\")}\r\n      {props.error && (\r\n        <div className={classes.formSummaryError}>{props.error}</div>\r\n      )}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\tconst onSubmit = formData => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n  \r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\t\r\n\treturn (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  );\t\t\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from './components/Users/UsersContainer'\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport { Route, withRouter } from 'react-router-dom';\nimport Friends from './components/Friends/Friends';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport {initializedApp} from './redux/app-reducer'\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { withSuspense } from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nclass App  extends React.Component {\n\n  componentDidMount() {\n    this.props.initializedApp();\n  }\n\n  render() {\n    if(!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" \n            render={withSuspense(DialogsContainer)} />\n\n          <Route path=\"/profile/:userId?\" \n            render={ () => <ProfileContainer /> } />\n\n          <Route path=\"/users\" \n            render={ () => <UsersContainer /> } />\n\n          <Route path=\"/login\" \n            render={ () => <Login /> } />\n\n          <Route path=\"/news\" render={ () => <News /> } />\n          <Route path=\"/music\" render={ () => <Music /> } />\n          <Route path=\"/settings\" render={ () => <Settings /> } />\n          <Route path=\"/friends\" render={ () => <Friends /> } />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {initializedApp}))(App)\n","import React from 'react'\r\n\r\nexport const withSuspense = (Component) => {\r\n\treturn (props) => {\r\n\t\treturn <React.Suspense fallback={<div>Loading...</div>}>\r\n              <Component {...props} />\r\n            </React.Suspense>\r\n\t}\r\n}","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","export const required = value => {\r\n\tif (value) return undefined\r\n\treturn 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\treturn undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrap\":\"Users_userWrap__2stdA\",\"userInfo\":\"Users_userInfo__3ofVe\",\"userPhoto\":\"Users_userPhoto__1CuJI\",\"userLocation\":\"Users_userLocation__2cmix\",\"userName\":\"Users_userName__2ThsJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3sCAg\",\"error\":\"FormsControls_error__3M7VN\",\"formSummaryError\":\"FormsControls_formSummaryError__3W277\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorWrap\":\"Paginator_paginatorWrap__37-2V\",\"Paginator\":\"Paginator_Paginator__3OZR0\",\"pageNumber\":\"Paginator_pageNumber__23W_2\",\"selectedPage\":\"Paginator_selectedPage__nbP7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__3Ak_0\",\"photo\":\"ProfileInfo_photo__1WGA3\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2-GmJ\"};","import React from 'react'\r\nimport classes from './../components/common/FormsControls/FormsControls.module.css'\r\n\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={ classes.formControl + \" \" + (hasError ? classes.error : \"\") }>\r\n      <Element {...input} {...props} />\r\n      { hasError && <span> { meta.error } </span> }\r\n    </div>\r\n  );\r\n};","module.exports = __webpack_public_path__ + \"static/media/user.e67e358c.png\";","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\t\tif (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\t\t\t\treturn <Component {...this.props} />;\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2K7C1\",\"postsBlock\":\"MyPosts_postsBlock__1LEKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPosts__posts\":\"Post_MyPosts__posts__1HHd8\",\"Post__item\":\"Post_Post__item__3t3YY\",\"Post__photo\":\"Post_Post__photo__2Skt2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__qCptM\",\"login\":\"Header_login__3OZlZ\"};"],"sourceRoot":""}