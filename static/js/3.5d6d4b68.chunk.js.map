{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","src","to","name","Message","messageWrap","message","maxLength50","maxLengthCreator","Textarea","Element","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","Dialogs","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","value","sendMessage","newMessageText","compose","connect","state","dialogsPage","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,QAAU,yBAAyB,YAAc,+B,sFCe9QC,EAZI,SAACC,GAEnB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACG,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC7C,yBAAKC,IAAI,6FACT,kBAAC,IAAD,CAASC,GAAIP,GAAOD,EAAMS,QCAjBC,EARC,SAACV,GAChB,OACC,yBAAKG,UAAWC,IAAQO,aACvB,yBAAKR,UAAWC,IAAQQ,SAAUZ,EAAMY,W,kCC6BrCC,EAAcC,YAAiB,IAC/BC,EAAWC,YAAQ,YAenBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAAClB,GACtB,OACE,0BAAMoB,SAAUpB,EAAMqB,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWR,EAAUS,SAAU,CAACC,IAAUZ,GAAcJ,KAAK,iBAAiBiB,YAAY,wBAEnG,6BACE,qDAQOC,EA7CC,SAAC3B,GAEf,IAAI4B,EAAkB5B,EAAM6B,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE7B,GAAIA,GAAI6B,EAAE7B,QACpF+B,EAAmBjC,EAAMkC,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEjC,QAOpF,OACG,yBAAKC,UAAWC,IAAQyB,SACtB,yBAAK1B,UAAWC,IAAQgC,cACtB,6BACIR,IAIN,yBAAKzB,UAAWC,IAAQ8B,UACpBD,EACF,kBAAChB,EAAD,CAAqBG,SAdP,SAACiB,GACnBrC,EAAMsC,YAAYD,EAAME,sB,gCCQbC,sBACbC,aAjBsB,SAACC,GACvB,MAAO,CACLb,QAASa,EAAMC,YAAYd,QAC3BK,SAAUQ,EAAMC,YAAYT,SAC5BK,eAAgBG,EAAMC,YAAYJ,mBAIX,SAACK,GAC1B,MAAO,CACLN,YAAa,SAACC,GACZK,EAASC,YAAyBN,SAOtCO,IAFaN,CAGbb","file":"static/js/3.5d6d4b68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Eo5BV\",\"dialogsItems\":\"Dialogs_dialogsItems__28q8K\",\"active\":\"Dialogs_active__2E7lP\",\"dialog\":\"Dialogs_dialog__10j__\",\"messages\":\"Dialogs_messages__1THWy\",\"addText\":\"Dialogs_addText__TjSdu\",\"message\":\"Dialogs_message__2473W\",\"messageWrap\":\"Dialogs_messageWrap__38wJe\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\r\n\treturn (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      <img src='https://avatars.mds.yandex.net/get-pdb/1050037/5e7810b0-2ec0-4dca-93c5-06552915f999/s600' />\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.messageWrap}>\r\n\t\t\t<div className={classes.message}>{props.message}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Element } from './../../hoc/form';\r\nimport {required, maxLengthCreator} from './../../utils/validators/validators'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n  let messagesElements = props.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n  // let newMessageText = props.newMessageText\r\n\r\n  let addNewMessage = (value) => {\r\n    props.sendMessage(value.newMessageText);\r\n  }\r\n\r\n\treturn (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>\r\n        <div>\r\n          { dialogsElements }\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.messages}>\r\n        { messagesElements }\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} validate={[required, maxLength50]} name='newMessageText' placeholder='Enter your message'/>\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs'\r\nimport { sendMessageActionCreator } from './../../redux/dialogs-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(sendMessageActionCreator(newMessageText));\r\n    }\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}